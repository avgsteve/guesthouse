*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  box-sizing: border-box;
  font-size: 62.5%; }
  @media only screen and (max-width: 75em) {
    html {
      font-size: 50%; } }

body {
  box-sizing: border-box;
  position: absolute;
  display: flex;
  flex-direction: row;
  width: 100vw;
  height: 100vh; }
  body.index {
    background-image: url("../img/bird-eye-photogrpahy-of-beachline.jpg");
    background-repeat: no-repeat;
    background-size: fit; }
  body.rooms {
    background-color: yellow;
    background-size: fit; }

.container {
  display: grid;
  grid-template-rows: 80vh min-content 40vw repeat(3, min-content);
  grid-template-columns: [sidebar-start] 8rem [sidebar-end full-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end]; }
  @media only screen and (max-width: 62.5em) {
    .container {
      grid-template-rows: 6rem 80vh min-content 40vw repeat(3, min-content);
      grid-template-columns: [full-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end]; } }
  @media only screen and (max-width: 50em) {
    .container {
      grid-template-rows: 6rem calc(100vh - 6rem); } }

.heading-1, .heading-2, .heading-3, .heading-4 {
  font-family: "Josefin Sans", sans-serif;
  font-weight: 400; }

.heading-1 {
  font-size: 4.5rem;
  color: #f9f7f6;
  line-height: 1; }

.heading-2 {
  font-size: 4rem;
  font-style: italic;
  line-height: 1; }
  .heading-2--light {
    color: #f9f7f6; }
  .heading-2--dark {
    color: #54483A; }

.heading-3 {
  font-size: 1.6rem;
  color: #c69963;
  text-transform: uppercase; }

.heading-4 {
  font-size: 1.9rem; }
  .heading-4--light {
    color: #f9f7f6; }
  .heading-4--dark {
    color: #54483A; }

.btn {
  background-color: #c69963;
  color: #fff;
  border: none;
  border-radius: 0;
  font-family: "Josefin Sans", sans-serif;
  font-size: 1.5rem;
  text-transform: uppercase;
  padding: 1.8rem 3rem;
  cursor: pointer;
  transition: all .2s; }
  .btn:hover {
    background-color: #B28451; }

.mb-sm {
  margin-bottom: 2rem; }

.mb-md {
  margin-bottom: 3rem; }

.mb-lg {
  margin-bottom: 4rem; }

.mb-hg {
  margin-bottom: 8rem; }

.nav {
  -webkit-mask-image: -webkit-gradient(linear, left 90%, left bottom, from(black), to(rgba(0, 0, 0, 0)));
  position: relative;
  top: 0;
  height: 10vh;
  width: 100vw;
  display: flex;
  justify-content: flex-end;
  padding: 0; }
  .nav-block {
    padding: 5px;
    display: flex;
    justify-content: space-around;
    width: auto;
    list-style: none; }
  .nav__item {
    padding: 5px;
    margin: 5px; }
    .nav__item--link span {
      font-size: 2.4rem; }

.header__logo {
  height: 3rem;
  justify-self: center; }

.header__btn {
  align-self: start;
  justify-self: start; }

.header__seenon-text {
  display: grid;
  grid-template-columns: 1fr max-content 1fr;
  grid-column-gap: 1.5rem;
  align-items: center;
  font-size: 1.6rem;
  color: #aaa; }
  .header__seenon-text::after, .header__seenon-text::before {
    content: "";
    height: 1px;
    display: block;
    background-color: currentColor; }

.header__seenon-logos {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-column-gap: 3rem;
  justify-items: center;
  align-items: center; }
  .header__seenon-logos img {
    max-height: 2.5rem;
    max-width: 100%;
    filter: brightness(70%); }

.footer {
  background-color: #101d2c;
  grid-column: full-start / full-end;
  padding: 8rem; }

.copyright {
  font-size: 1.4rem;
  color: #aaa;
  margin-top: 6rem;
  margin-right: auto;
  margin-left: auto;
  text-align: center;
  width: 70%; }

/*
Note in main.scss:

1) use "npm run concat:css" to generate concatinated file
    NPM package.json script:
    "concat:css": "concat -o public/css/style.concat.css public/css/icon-font.css public/css/style.comp.css",

  style.concat.css is the output file

2) PostCSS  (ref:  https://www.npmjs.com/package/postcss )
   PostCSS is a tool for transforming styles with JS plugins. These plugins can lint your CSS, support variables and mixins, transpile future CSS syntax, inline images, and more.

3) Autoprefixer  (ref: https://www.npmjs.com/package/autoprefixer )
   PostCSS plugin to parse CSS and add vendor prefixes to CSS rules using values from Can I Use. It is recommended by Google and used in Twitter and Alibaba.
Write your CSS rules without vendor prefixes (in fact, forget about them entirely):

4) NPM Script:   "build:css": "npm-run-all compile:sass concat:css prefix:css compress:css"
   will compile main.scss, concatinate compiled CSS with icon-font.css, prefixing and building the concatinated CSS for making the CSS compatible with older browsers and then finally compress the CSS file

*/
